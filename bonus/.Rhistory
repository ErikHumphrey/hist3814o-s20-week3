setwd("~/# DIGH 3814/hist3814o-s20-week2/ocr")
# install only the first time
install.packages('magick')
install.packages('tesseract')
# tell R which packages you need
library(magick)
library(magrittr)
library(tesseract)
# now let's create a variable called 'text'
# and read the image into it
# and we'll modify the image to give us
# the best chance of reading the text
# the final line, image_ocr() does the text extraction
# remember to set your working directory to whatever folder
# contains the stuff you want to work on.
text <- image_read("e001518030.jpg") %>%
image_resize("2000") %>%
image_convert(colorspace = 'gray') %>%
image_trim() %>%
image_ocr()
write.table(text, "output.txt")
write.table(text, "output.txt")
# install only the first time
install.packages('magick')
install.packages('tesseract')
# tell R which packages you need
library(magick)
library(magrittr)
library(tesseract)
# now let's create a variable called 'text'
# and read the image into it
# and we'll modify the image to give us
# the best chance of reading the text
# the final line, image_ocr() does the text extraction
# remember to set your working directory to whatever folder
# contains the stuff you want to work on.
text <- image_read("e001518030.jpg") %>%
image_resize("2000") %>%
image_convert(colorspace = 'gray') %>%
image_trim() %>%
image_ocr()
write.table(text, "output.txt")
install.packages("magick")
# install only the first time
install.packages('magick')
install.packages('tesseract')
# tell R which packages you need
library(magick)
library(magrittr)
library(tesseract)
# now let's create a variable called 'text'
# and read the image into it
# and we'll modify the image to give us
# the best chance of reading the text
# the final line, image_ocr() does the text extraction
# remember to set your working directory to whatever folder
# contains the stuff you want to work on.
text <- image_read("e001518030.jpg") %>%
image_resize("2000") %>%
image_convert(colorspace = 'gray') %>%
image_trim() %>%
image_ocr()
write.table(text, "output.txt")
setwd("~/# DIGH 3814/hist3814o-s20-week2/ocr")
# install only the first time
install.packages('magick')
install.packages('tesseract')
# tell R which packages you need
library(magick)
library(magrittr)
library(tesseract)
# now let's create a variable called 'text'
# and read the image into it
# and we'll modify the image to give us
# the best chance of reading the text
# the final line, image_ocr() does the text extraction
# remember to set your working directory to whatever folder
# contains the stuff you want to work on.
text <- image_read("e001518030.jpg") %>%
image_resize("2000") %>%
image_convert(colorspace = 'gray') %>%
image_trim() %>%
image_ocr()
write.table(text, "output.txt")
install.packages("magick")
write.table(text, "output.txt")
# install only the first time
install.packages('magick')
install.packages('tesseract')
# tell R which packages you need
library(magick)
library(magrittr)
library(tesseract)
imgsource <- "many-pics"
myfiles <- list.files(path = imgsource, pattern = "jpg", full.names = TRUE)
lapply(myfiles, function(i){
text <- image_read(i) %>%
image_resize("3000x") %>%
image_convert(type = 'Grayscale') %>%
image_trim(fuzz = 40) %>%
image_write(format = 'png', density = '300x300') %>%
tesseract::ocr()
outfile <- paste(i,"-ocr.txt",sep="")
cat(text, file=outfile, sep="\n")
})
install.packages('igraph')
library('igraph')
nodes <- read.csv("texasnodes.csv", header=T, as.is=T)
links <- read.csv("texaslinks.csv", header=T, as.is=T)
nodes <- read.csv("texasnodes.csv", header=T, as.is=T)
links <- read.csv("texaslinks.csv", header=T, as.is=T)
setwd("~/# DIGH 3814/hist3814o-s20-week3/bonus")
install.packages('igraph')
install.packages("igraph")
library('igraph')
nodes <- read.csv("texasnodes.csv", header=T, as.is=T)
links <- read.csv("texaslinks.csv", header=T, as.is=T)
head(nodes)
head(links)
nrow(nodes); length(unique(nodes$id))
nrow(links); nrow(unique(links[,c("source", "target")]))
links <- aggregate(links[,3], links[,-3], sum)
links <- links[order(links$target, links$source),]
colnames(links)[3] <- "weight"
rownames(links) <- NULL
head(links)
net <- graph.data.frame(d=links, vertices=nodes, directed=T)
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
net
plot(net, edge.arrow.size=.4,vertex.label=NA)
deg <- degree(net, mode="all")
hist(deg, breaks=1:vcount(net)-1, main="Histogram of node degree")
plot(net, vertex.size=deg*2, vertex.label = NA)
write.csv(deg, 'degree.csv')
closepeople <- closeness(net, mode="all", weights=NA)
sort(closepeople, decreasing = T) # so that we see who is most close first
write.csv(closepeople, 'closeness.csv') # so we have it on file.
par(mfrow=c(1,2))
# vertex.label.cex sets the size of the label; play with the sizes until you see something appealing.
plot(net, vertex.size=hs*40, vertex.label.cex =.2, edge.arrow.size=.1, main="Hubs")
plot(net, vertex.size=as*20, vertex.label = NA, edge.arrow.size=.1, main="Authorities")
hs <- hub_score(net, weights=NA)$vector
as <- authority_score(net, weights=NA)$vector
par(mfrow=c(1,2))
# vertex.label.cex sets the size of the label; play with the sizes until you see something appealing.
plot(net, vertex.size=hs*40, vertex.label.cex =.2, edge.arrow.size=.1, main="Hubs")
plot(net, vertex.size=as*20, vertex.label = NA, edge.arrow.size=.1, main="Authorities")
write.csv(hs, 'hub_score.csv')
write.csv(as, 'authority_score.csv')
cfg <- cluster_fast_greedy(as.undirected(net))
lapply(cfg, function(x) write.table( data.frame(x), 'cfg.csv'  , append= T, sep=',' ))
cfg <- cluster_fast_greedy(as.undirected(net))
lapply(cfg, function(x) write.table( data.frame(x), 'cfg.csv'  , append= T, sep=',' ))
plot(cfg, net, vertex.size = 1, vertex.label.cex =.2, edge.arrow.size=.1, main="Communities")
l1 <- layout_with_fr(net)
plot(cfg, net, layout=l1, vertex.size = 1, vertex.label.cex =.2, edge.arrow.size=.1, main="Communities")
